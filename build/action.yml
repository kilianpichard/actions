name: "🛠️ Build and Push Docker Image"
description: "Checkout code, setup Node.js, build and push Docker image."
inputs:
  node-version:
    description: "Version de Node.js"
    required: false
    default: "21"
  path:
    description: "Chemin vers le dossier contenant le fichier package.json"
    required: false
    default: "."
  build_command:
    description: "Commande pour construire l'image Docker"
    required: false
    default: ""
  version:
    description: "Version de l'image Docker"
    required: false
    default: "latest"
  github-token:
    description: "Token GitHub"
    required: true
  export_version_key:
    description: "Clé pour exporter la version"
    required: false
    default: ""

outputs: {}

runs:
  using: "composite"
  steps:
    - name: 📦 Setup
      uses: kilianpichard/actions/setup@main
      with:
        path: ${{ inputs.path }}
    - name: 🐳 Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
    - name: 🔑 Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}
    - name: Pre Build
      shell: bash
      if: ${{ inputs.export_version_key != '' }}
      run: |
        cd ${{ inputs.path }}
        echo "export ${{ inputs.export_version_key }}=${{ env.VERSION }}" >> .env
    - name: Run Build
      if: ${{ inputs.build_command != '' }}
      shell: bash
      run: |
        cd ${{ inputs.path }}
        ${{ inputs.build_command }}
    - name: 🚀 Run Buildx (push image)
      shell: bash
      run: |
        docker buildx build --target production --platform linux/arm64 \
        --push \
        -t ${REGISTRY}/${IMAGE_NAME}:${VERSION} .

    - name: Add comment to PR
      uses: peter-evans/create-or-update-comment@v1
      if: github.event_name == 'pull_request'
      with:
        token: ${{ inputs.github-token }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Docker image built: ghcr.io/${{github.repository}}:${{ inputs.version }}
          Version: ${{ inputs.version }}

    - name: 🏷️ Tag Develop
      if: github.ref == 'refs/heads/develop'
      shell: bash
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git tag -a "${{ inputs.version }}" -m "Tag version ${{ inputs.version }}" 
        git push origin "${{ inputs.version }}"
