name: "üè∑Ô∏è Tag version"
description: "Checkout code, setup Node.js, and tag version."

inputs:
  node-version:
    description: "Version de Node.js"
    required: false
    default: "21"
  path:
    description: "Chemin vers le dossier contenant le fichier package.json"
    required: false
    default: "."

outputs:
  VERSION: # Sortie pour r√©cup√©rer la version
    description: "Version du projet"
    value: ${{ steps.get_version.outputs.VERSION }}

runs:
  using: "composite"
  steps:
    - name: üì¶ Setup
      uses: kilianpichard/actions/setup@main
      with:
        path: ${{ inputs.path }}

    - name: üöÄ Release with semantic-release
      shell: bash
      run: |
        cd ${{ inputs.path }}
        npx semantic-release

    - name: üè∑Ô∏è Get version
      id: get_version # ID pour faire r√©f√©rence dans les outputs
      shell: bash
      run: |
        if [ ! -f ${{ inputs.path }}/version.txt ]; then
          LATEST_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo $LATEST_VERSION | sed 's/v//' > ${{ inputs.path }}/version.txt
        fi
        VERSION=$(cat ${{ inputs.path }}/version.txt)
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
        echo "::set-output name=VERSION::$VERSION"  # Important pour d√©finir la sortie
