name: CI/CD 🚀

on:
  workflow_call:
    inputs:
      path:
        description: "Path to the application"
        required: true
        default: "app"
        type: string
      runBuildCommand:
        description: "Command to build the application"
        required: true
        default: "yarn build"
        type: string

    secrets:
      DOCKER_LOGIN:
        required: true
      DOCKER_TOKEN:
        required: true
      EC2_SSH:
        required: true
      EC2_USER:
        required: true
      EC2_HOST:
        required: true

jobs:
  install:
    name: 📥 Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Install Dependencies
        uses: ./actions/install@main
        with:
          path: ${{ inputs.path }}

  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: 🧹 Lint Code
        uses: ./actions/lint@main
        with:
          path: ${{ inputs.path }}

  release:
    name: 🏷️ Tag Version
    needs: install
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag_version.outputs.VERSION }}
    steps:
      - name: 🏷️ Tag Version
        id: tag_version
        uses: ./actions/tag_version@main
        with:
          path: ${{ inputs.path }}

  build:
    name: 🛠️ Build and Push Docker Image
    needs: [release, lint]
    runs-on: ubuntu-latest
    env:
      DOCKER_TARGET_PLATFORM: linux/arm64
      VERSION: ${{ needs.release.outputs.version }}
    steps:
      - name: Setup
        uses: ./actions/setup@main
        with:
          path: ${{ inputs.path }}
      - name: Configure .env with VITE_APP_VERSION
        run: |
          cd ${{ inputs.path }}
          echo "VITE_APP_VERSION=${{ env.VERSION }}" >> .env
      - name: 🛠️ Build and Push Docker Image
        uses: ./actions/build@main
        with:
          path: ${{ inputs.path }}
          version: ${{ env.VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          runBuildCommand: ${{ inputs.runBuildCommand }}

  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [release, build]
    env:
      VERSION: ${{ needs.release.outputs.version }}
    steps:
      - name: 🚀 Deploy to Production
        uses: ./actions/deploy@main
        with:
          version: ${{ env.VERSION }}
          ec2_ssh: ${{ secrets.EC2_SSH }}
          ec2_user: ${{ secrets.EC2_USER }}
          ec2_host: ${{ secrets.EC2_HOST }}
          app_name: ${{ github.ref == 'refs/heads/main' && 'KARVEO_APP' || 'KARVEO_APP_STAGING' }}
          app_folder: "karveo"
          stack_name: "karveo"
